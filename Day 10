#day10 of #100daysofcodechallenge #vitbhopal #vitbhopalgaming
ðŸ“ŒJava Script Programming
ðŸ“ŒTopic:- Reorder List
QuestionLink:- https://leetcode.com/problems/reorder-list/
ðŸ“ŒDescription:- You are given the head of a singly linked-list. The list can be represented as:
L0 â†’ L1 â†’ â€¦ â†’ Ln - 1 â†’ Ln
Reorder the list to be on the following form:
L0 â†’ Ln â†’ L1 â†’ Ln - 1 â†’ L2 â†’ Ln - 2 â†’ â€¦
You may not modify the values in the list's nodes. Only nodes themselves may be changed.
ðŸ“ŒTestcase 1:-
Input: head = [1,2,3,4]
Output: [1,4,2,3]
ðŸ“ŒTestcase 2:-
Input: head = [1,2,3,4,5]
Output: [1,5,2,4,3]
ðŸ“ŒConstraints:-
The number of nodes in the list is in the range [1, 5 * 104].
1 <= Node.val <= 1000
ðŸ“ŒCode:-

var reorderList = function (head) {
  let [slow, fast] = [head, head.next];
  //when this loop exits slow will be at half of the list
  while (fast && fast.next) {
    slow = slow.next;
    fast = fast.next.next;
  }
  let second = slow.next;
  slow.next = null;

  //reverse the second list
	let prev = null
	while (second) {
		let temp = second.next;
		second.next = prev;
		prev = second;
		second = temp;
  }

  //merge the two LL
  let first = head;
  second = prev;
  while (second) {
    let [temp1, temp2] = [first.next, second.next];
    first.next = second;
    second.next = temp1;
    first = temp1;
    second = temp2;
  }
};
